input {
 udp {
  port => 514
  type => "udp"
 }
 udp {
  port => 8829
  type => "iis"
 }
}

filter {
 grok {
  patterns_dir => [ "/etc/logstash/files/patterns" ]
  match => [ "message", "<%{NONNEGINT:priority}>%{SYSLOGTSPIX:timestamp} %{HOSTNAME:hostname} : %(%{WORD:app}|-)-(%{WORD:proc}|-)-(%{WORD:msgid}|-): %{WORD:action} %{WORD:protocol} %{WORD} %{WORD:src_interface}:%{IP:src_ip}%{URIPATH}%{NONNEGINT:src_port} %{WORD} %{WORD:dst_interface}:%{IP:dst_ip}%{URIPATH}%{NONNEGINT:dst_port} by access-group %{QUOTEDSTRING:access_group}?(%{GREEDYDATA:flags})" ]
  match => [ "message", "<%{NONNEGINT:priority}>%{SYSLOGTSPIX:timestamp} %{HOSTNAME:hostname} : %(%{WORD:app}|-)-(%{WORD:proc}|-)-(%{WORD:msgid}|-):%{GREEDYDATA:message}" ]
  overwrite => [ "message" ]
  add_tag => [ "syslog" ]
 }

grok {
  patterns_dir => [ "/etc/logstash/files/patterns" ]
  match => [ "message", "%{IISTIME:date_time}%{SP}%{WORD:s_sitename}%{SP}?(%{HOST:s_hostname})%{GREEDYDATA}" ]  
  match => [ "message", "%{SP}%{IPORHOST:s_ip}%{SP}(%{HTTPMETHOD:cs_method}%{SP}|-%{SP})%{NOTSPACE:cs_uri_stem}%{SP}%{NOTSPACE:cs_uri_query}%{SP}(%{NUMBER:s_port}|-)%{SP}(%{USERNAME:cs_username}|-)%{SP}(%{IP:c_ip}|-)%{SP}?(HTTP/%{APIVERSION:cs_version}%{SP})%{NOTSPACE:cs_user_agent}%{SP}%{GREEDYDATA}" ]
  match => [ "message", "%{NOTSPACE}%{SP}%{NUMBER:sc_status}%{SP}%{NUMBER:sc_substatus}%{SP}%{NUMBER:sc_win32_status}%{SP}%{NUMBER:sc_bytes}%{SP}%{NUMBER:cs_bytes}%{SP}%{NUMBER:time_taken}" ]
  match => [ "message", "%{IISTIME:date_time"}%{GREEDYDATA:message}" ]
  overwrite => [ "message" ]
  add_tag => [ "iis" ]
}

date {
  match => [ "date_time", "YYYY-MM-dd HH:mm:ss" ]
} 

mutate{
	convert => [ "sc_status", "integer" ]
	convert => [ "sc_substatus", "integer" ]
	convert => [ "sc_win32_status", "integer"]
	convert => [ "sc_bytes", "integer" ]
	convert => [ "cs_bytes", "integer" ]
	convert => [ "time_taken", "integer" ]
}

 
}

output {
 elasticsearch {
  host => "log-01.datacentre.esendex.com"
 }
}

